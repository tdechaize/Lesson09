<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__lesson09_8c" xml:lang="fr">
<title>RÃ©fÃ©rence du fichier Lesson09.c</title>
<indexterm><primary>Lesson09.c</primary></indexterm>
<para>

<para>Ouvre une simple fenêtre Windows et dessine des étoiles scintillantes qui sont en rotation sous forme d&apos;une spirale. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;windows.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &lt;gl\gl.h&gt;<?linebreak?>#include &lt;gl\glu.h&gt;<?linebreak?>#include &lt;gl\glext.h&gt;<?linebreak?></programlisting>Graphe des dÃ©pendances par inclusion de Lesson09.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structetoiles">etoiles</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__lesson09_8c_1aee1563ded26b0491400b3ed720011879">num</link>&#160;&#160;&#160;50</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions    </title>
        <itemizedlist>
            <listitem><para>LRESULT CALLBACK <link linkend="__lesson09_8c_1ae749e989b362e19783c7af4a2bf46c95">WndProc</link> (HWND <link linkend="__lesson09_8c_1afec4341c234519e145bac6f0e5edaa51">hWnd</link>, UINT uMsg, WPARAM wParam, LPARAM lParam)</para>

<para>Fonction CALLBACK de traitement des messages Windows. </para>
</listitem>
            <listitem><para>bool <link linkend="__lesson09_8c_1ab297f3a05d02d1e923b2feb09384c321">NeHeLoadBitmap</link> (LPTSTR szFileName, GLuint *<link linkend="__lesson09_8c_1aade27af54c2c7c72b1a666ff247058ca">texid</link>)</para>

<para>Fonction NeHeLoadBitmap : charge un fichier BMP en mémoire pour generer une texture. </para>
</listitem>
            <listitem><para>int <link linkend="__lesson09_8c_1a8dd15539ba90ae3670aa0a9f889d2236">LoadGLTextures</link> ()</para>
</listitem>
            <listitem><para>GLvoid <link linkend="__lesson09_8c_1a87bb84d489df61ed7b0c002584fd984f">ReSizeGLScene</link> (GLsizei width, GLsizei height)</para>

<para>Fonction ReSizeGLScene : redimensionnement de la fenêtre Windows gérant OpenGL. </para>
</listitem>
            <listitem><para>int <link linkend="__lesson09_8c_1aa4c387d3f1ebce6d57684b6a10c9b0ae">InitGL</link> (GLvoid)</para>

<para>Fonction InitGL : Fin de l&apos;initialisation de la fenêtre Windows gérant OpenGL. </para>
</listitem>
            <listitem><para>int <link linkend="__lesson09_8c_1a52061247bdaeb770e3a1d59eefaad972">DrawGLScene</link> (GLvoid)</para>

<para>Fonction DrawGLScene : Dessin sous OpenGL dans la fenêtre Windows. </para>
</listitem>
            <listitem><para>GLvoid <link linkend="__lesson09_8c_1af33a2273205c1491be5916d3091658e0">KillGLWindow</link> (GLvoid)</para>

<para>Fonction KillGLWindow : Destruction de toutes les ressources du programme. </para>
</listitem>
            <listitem><para>BOOL <link linkend="__lesson09_8c_1ae5f043c9df9b9e5e0e26d567feeeb1bc">CreateGLWindow</link> (char *title, int width, int height, int bits, BOOL fullscreenflag)</para>

<para>Creation of our OpenGL Window. </para>
</listitem>
            <listitem><para>int WINAPI <link linkend="__lesson09_8c_1a661c2abc03926acfaeb93b4ae7db4943">WinMain</link> (HINSTANCE <link linkend="__lesson09_8c_1a74029128723095e7bf00a71d46af8b24">hInstance</link>, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)</para>

<para>Creation of our application on Windows System (not console application) *. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>HDC <link linkend="__lesson09_8c_1a78f6446a0e13adc7b7b2f239112ac785">hDC</link> =NULL</para>
</listitem>
            <listitem><para>HGLRC <link linkend="__lesson09_8c_1a874963259c7cd998acfe6e187fbdb4c1">hRC</link> =NULL</para>
</listitem>
            <listitem><para>HWND <link linkend="__lesson09_8c_1afec4341c234519e145bac6f0e5edaa51">hWnd</link> =NULL</para>
</listitem>
            <listitem><para>HINSTANCE <link linkend="__lesson09_8c_1a74029128723095e7bf00a71d46af8b24">hInstance</link></para>
</listitem>
            <listitem><para>BOOL <link linkend="__lesson09_8c_1a55a8351b704275ad12988864918abb2a">keys</link> [256]</para>
</listitem>
            <listitem><para>BOOL <link linkend="__lesson09_8c_1a22389371583c4b8843e06da43399d6d9">active</link> =TRUE</para>
</listitem>
            <listitem><para>BOOL <link linkend="__lesson09_8c_1ab15a33c0173f2c5b6ac806c55cf7f0ba">fullscreen</link> =TRUE</para>
</listitem>
            <listitem><para>BOOL <link linkend="__lesson09_8c_1ae33d9fcdba1f3ce7d730752ae88594b3">twinkle</link></para>
</listitem>
            <listitem><para>BOOL <link linkend="__lesson09_8c_1a26fe2712ec0f6355d9517e84c8139f81">tp</link></para>
</listitem>
            <listitem><para><link linkend="_structetoiles">etoiles</link> <link linkend="__lesson09_8c_1ac64e182ae2c74bf412b1fd02b9f488f9">star</link> [<link linkend="__lesson09_8c_1aee1563ded26b0491400b3ed720011879">num</link>]</para>
</listitem>
            <listitem><para>GLfloat <link linkend="__lesson09_8c_1a5a2149a845f88b6489d3d88845d0f257">zoom</link> =-15.0f</para>
</listitem>
            <listitem><para>GLfloat <link linkend="__lesson09_8c_1ab98fac9381661f3225062c3522bb29ad">tilt</link> =90.0f</para>
</listitem>
            <listitem><para>GLfloat <link linkend="__lesson09_8c_1a31a0a56b0946f085f98ad55b0d06d072">spin</link></para>
</listitem>
            <listitem><para>GLuint <link linkend="__lesson09_8c_1a8166a6eff3ba7dbe6db9caa81bdd4444">loop</link></para>
</listitem>
            <listitem><para>GLuint <link linkend="__lesson09_8c_1a8dbc8c0cec45367c7d19c7dfa3768fae">texture</link> [1]</para>
</listitem>
            <listitem><para>GLuint <link linkend="__lesson09_8c_1aade27af54c2c7c72b1a666ff247058ca">texid</link> [1]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description dÃ©taillÃ©e</title>

<para>Ouvre une simple fenêtre Windows et dessine des étoiles scintillantes qui sont en rotation sous forme d&apos;une spirale. </para>

<para>Comments manageable by Doxygen</para>

<para>Modified smoothly by Thierry DECHAIZE</para>

<para>Paradigm : obtain one source (only one !) compatible for multiple free C Compilers and provide for all users an development environment on Windows (64 bits compatible), the great Code::Blocks manager (version 20.03), and don&apos;t use glaux.lib or glaux.dll.</para>

<para>a) Mingw 32 bits, version officielle gcc 9.2.0 : downloadable on <link xlink:href="http://sourceforge.net/projects/mingw/">http://sourceforge.net/projects/mingw/</link> (official) b) Mingw 64 bits included in new IDE Red Panda Dev-Cpp, version gcc 10.3.0 : donwloadable on <link xlink:href="http://sourceforge.net/projects/dev-cpp-2020/">http://sourceforge.net/projects/dev-cpp-2020/</link> c) Mingw 64 bits included in package Code::Blocks (version 20.03), version gcc 8.1.0 : downloadable on <link xlink:href="http://sourceforge.net/projects/codeblocks/files/Binaries/20.03/Windows/">http://sourceforge.net/projects/codeblocks/files/Binaries/20.03/Windows/</link> d) Mingw 32 and 64 bits packagés, version gcc 11.2.0 : downloadable on <link xlink:href="https://winlibs.com/">https://winlibs.com/</link> (and CLANG included in, 32 and 64 bits), two kits :<itemizedlist>
<listitem>
<para>winlibs-i686-posix-dwarf-gcc-11.2.0-llvm-13.0.0-mingw-w64ucrt-9.0.0-r2.7z (32 bits)</para>
</listitem><listitem>
<para>winlibs-x86_64-posix-seh-gcc-11.2.0-llvm-13.0.0-mingw-w64ucrt-9.0.0-r2.7z (64 bits) e) Cygwin64, 32 et 64 bits, version gcc 11.0.0 : downloadable on <link xlink:href="http://www.cygwin.com/install.html">http://www.cygwin.com/install.html</link> (tool for install : setup-x86_64.exe) f) TDM GCC, 32 et 64 bits, version 10.3.0 : downloadable on <link xlink:href="http://sourceforge.net/projects/TDM-GCC">http://sourceforge.net/projects/TDM-GCC</link> g) MSYS2 environnement MINGW32 and MINGW64, 32 et 64 bits, version de 2022 (msys2-x86_64-20220118.exe), version gcc 11.2.0 : downloadable on <link xlink:href="https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20220118.exe">https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20220118.exe</link> h) Visual Studio 2022, 32 et 64 bits, community edition for free : downloadable on <link xlink:href="https://visualstudio.microsoft.com/fr/thank-you-downloading-visual-studio/?sku=Community&amp;rel=17">https://visualstudio.microsoft.com/fr/thank-you-downloading-visual-studio/?sku=Community&amp;rel=17</link> i) Borland C/C++ 32 bits, version 5.5 : downloadable on <link xlink:href="https://developerinsider.co/download-and-install-borland-c-compiler-on-windows-10/">https://developerinsider.co/download-and-install-borland-c-compiler-on-windows-10/</link> j) Digital Mars Compiler C 32 bits version 8.57 : downloadable on <link xlink:href="http://www.digitalmars.com">http://www.digitalmars.com</link> (the more old compiler, the more bugged, dead branch !) k) OpenWatcom 32 et 64 bits, version 2.0 : downloadable on <link xlink:href="http://openwatcom.mirror.fr/">http://openwatcom.mirror.fr/</link> (only 32 bits version run correctly !) l) Lcc and Lcc64, 32 et 64 bits: downloadable <link xlink:href="http://www.cs.virginia.edu/~lcc-win32/">http://www.cs.virginia.edu/~lcc-win32/</link> m) PELLES C, 32 et 64 bits, version 11.0 : downloadable on <link xlink:href="http://www.smorgasbordet.com/pellesc/">http://www.smorgasbordet.com/pellesc/</link> o) CLANG, adossé aux environnements MINGW64 et MINGW32, version 13.0.0 (version gcc 12.0.0) : downloadable on <link xlink:href="https://winlibs.com/">https://winlibs.com/</link> p) CLANG, adossé aux environnements Visual Studio 2022 (+ kits Microsoft), version 13.0.0 : downloadable on <link xlink:href="https://releases.llvm.org/download.html">https://releases.llvm.org/download.html</link> q) CLANG de la version MSYS2, adossé aux environnements MINGW64 et MINGW32, version 13.0.0 (version gcc 11.2.0) : downloadable on <link xlink:href="https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20220118.exe">https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20220118.exe</link> r) CLANG de la version CYGWIN, adossé aux environnements MINGW64 et MINGW32, version 8.0.0 (version gcc 11.0.0) : downloadable <link xlink:href="http://www.cygwin.com/install.html">http://www.cygwin.com/install.html</link> (tool for install : setup-x86_64.exe)</para>
</listitem></itemizedlist>
</para>

<para>TDE -&gt; Add resource file end resource header for restitute version + icon OpenGL.ico for fun because versionning is important, same for freeware :-) !</para>

<para>Date : 2022/02/14</para>

<para><formalpara><title>Auteur</title>

<para>Jeff Molofee ( NeHe ) originely, Modified for LCCWin32 compiler by Robert Wishlaw 2002/11/23 </para>

<para>After adapted by Thierry Dechaize to verify paradigm : one source for multiple C Compilers </para>
</formalpara>
<formalpara><title>Version</title>

<para>2.0.1.0 </para>
</formalpara>
<formalpara><title>Date</title>

<para>14 février 2022</para>
</formalpara>
Ce programme ne gère que deux événements : le clic sur le bouton &quot;Fermé&quot; de la fenêtre ou la sortie par la touche ESC. </para>
</section>
<section>
<title>Documentation des macros</title>
<anchor xml:id="__lesson09_8c_1aee1563ded26b0491400b3ed720011879"/><section>
    <title>num</title>
<indexterm><primary>num</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>num</secondary></indexterm>
<para><computeroutput>#define num&#160;&#160;&#160;50</computeroutput></para></section>
</section>
<section>
<title>Documentation des fonctions</title>
<anchor xml:id="__lesson09_8c_1ae5f043c9df9b9e5e0e26d567feeeb1bc"/><section>
    <title>CreateGLWindow()</title>
<indexterm><primary>CreateGLWindow</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>CreateGLWindow</secondary></indexterm>
<para><computeroutput>BOOL CreateGLWindow (char * title, int width, int height, int bits, BOOL fullscreenflag)</computeroutput></para><para>

<para>Creation of our OpenGL Window. </para>
</para>

<para>This Code Creates Our OpenGL Window. Parameters Are: * 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>title</entry><entry>
<para>- Title To Appear At The Top Of The Window * </para>
</entry>
                            </row>
                            <row>
<entry>width</entry><entry>
<para>- Width Of The GL Window Or Fullscreen Mode * </para>
</entry>
                            </row>
                            <row>
<entry>height</entry><entry>
<para>- Height Of The GL Window Or Fullscreen Mode * </para>
</entry>
                            </row>
                            <row>
<entry>bits</entry><entry>
<para>- Number Of Bits To Use For Color (8/16/24/32) * </para>
</entry>
                            </row>
                            <row>
<entry>fullscreenflag</entry><entry>
<para>- Use Fullscreen Mode (TRUE) Or Windowed Mode (FALSE) * </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BOOL - un entier booleen (OK ou non). </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_ae5f043c9df9b9e5e0e26d567feeeb1bc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_ae5f043c9df9b9e5e0e26d567feeeb1bc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1a52061247bdaeb770e3a1d59eefaad972"/><section>
    <title>DrawGLScene()</title>
<indexterm><primary>DrawGLScene</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>DrawGLScene</secondary></indexterm>
<para><computeroutput>int DrawGLScene (GLvoid )</computeroutput></para><para>

<para>Fonction DrawGLScene : Dessin sous OpenGL dans la fenêtre Windows. </para>
</para>

<para>This Code draw the scene OpenGL in the main window.</para>

<para>Rien 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GLvoid</entry><entry>
<para>un void OpenGL. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int un entier (booleen) </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_a52061247bdaeb770e3a1d59eefaad972_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1aa4c387d3f1ebce6d57684b6a10c9b0ae"/><section>
    <title>InitGL()</title>
<indexterm><primary>InitGL</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>InitGL</secondary></indexterm>
<para><computeroutput>int InitGL (GLvoid )</computeroutput></para><para>

<para>Fonction InitGL : Fin de l&apos;initialisation de la fenêtre Windows gérant OpenGL. </para>
</para>

<para>This Code finish the initialization OpenGL of the main window.</para>

<para>Rien 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GLvoid</entry><entry>
<para>un void OpenGL. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int un entier (booleen) </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_aa4c387d3f1ebce6d57684b6a10c9b0ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_aa4c387d3f1ebce6d57684b6a10c9b0ae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1af33a2273205c1491be5916d3091658e0"/><section>
    <title>KillGLWindow()</title>
<indexterm><primary>KillGLWindow</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>KillGLWindow</secondary></indexterm>
<para><computeroutput>GLvoid KillGLWindow (GLvoid )</computeroutput></para><para>

<para>Fonction KillGLWindow : Destruction de toutes les ressources du programme. </para>
</para>

<para>This Code destroy all resources of this program.</para>

<para>Rien 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GLvoid</entry><entry>
<para>un void OpenGL. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>GLvoid un void OpenGL. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_af33a2273205c1491be5916d3091658e0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1a8dd15539ba90ae3670aa0a9f889d2236"/><section>
    <title>LoadGLTextures()</title>
<indexterm><primary>LoadGLTextures</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>LoadGLTextures</secondary></indexterm>
<para><computeroutput>int LoadGLTextures ( )</computeroutput></para>Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_a8dd15539ba90ae3670aa0a9f889d2236_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_a8dd15539ba90ae3670aa0a9f889d2236_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1ab297f3a05d02d1e923b2feb09384c321"/><section>
    <title>NeHeLoadBitmap()</title>
<indexterm><primary>NeHeLoadBitmap</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>NeHeLoadBitmap</secondary></indexterm>
<para><computeroutput>bool NeHeLoadBitmap (LPTSTR szFileName, GLuint * texid)</computeroutput></para><para>

<para>Fonction NeHeLoadBitmap : charge un fichier BMP en mémoire pour generer une texture. </para>
</para>

<para>This Code Creates Texture From a Bitmap File.</para>

<para>En entrée le nom du fichier Bitmap et en sortie la texture utilisable avec OpenGL 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>szFileName</entry><entry>
<para>nom du fichier BMP * </para>
</entry>
                            </row>
                            <row>
<entry>*texid</entry><entry>
<para>un pointeur sur la texture générée * </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool un booleen texture créée ou non. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_ab297f3a05d02d1e923b2feb09384c321_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1a87bb84d489df61ed7b0c002584fd984f"/><section>
    <title>ReSizeGLScene()</title>
<indexterm><primary>ReSizeGLScene</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>ReSizeGLScene</secondary></indexterm>
<para><computeroutput>GLvoid ReSizeGLScene (GLsizei width, GLsizei height)</computeroutput></para><para>

<para>Fonction ReSizeGLScene : redimensionnement de la fenêtre Windows gérant OpenGL. </para>
</para>

<para>This Code Resize the main window.</para>

<para>En entrée les deux nouvelles dimensions de la fenêtre 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>width</entry><entry>
<para>Width of the GL Window Or Fullscreen Mode * </para>
</entry>
                            </row>
                            <row>
<entry>height</entry><entry>
<para>Height of the GL Window Or Fullscreen Mode * </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>GLvoid un void OpenGL. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_a87bb84d489df61ed7b0c002584fd984f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1a661c2abc03926acfaeb93b4ae7db4943"/><section>
    <title>WinMain()</title>
<indexterm><primary>WinMain</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>WinMain</secondary></indexterm>
<para><computeroutput>int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)</computeroutput></para><para>

<para>Creation of our application on Windows System (not console application) *. </para>
</para>

<para>This Code is mandatory to create windows application (function WinMain) * 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>hInstance</entry><entry>
<para>- Header de l&apos;instance Windows * </para>
</entry>
                            </row>
                            <row>
<entry>hPrevInstance</entry><entry>
<para>- Header de l&apos;instance précédente de Windows * </para>
</entry>
                            </row>
                            <row>
<entry>lpCmdLine</entry><entry>
<para>- Un pointeur sur la ligne de commande * </para>
</entry>
                            </row>
                            <row>
<entry>nCmdShow</entry><entry>
<para>- Un indicateur d&apos;état * </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int - un entier booleen (OK ou non). *<itemizedlist>
<listitem></listitem></itemizedlist>
</para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_a661c2abc03926acfaeb93b4ae7db4943_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__lesson09_8c_1ae749e989b362e19783c7af4a2bf46c95"/><section>
    <title>WndProc()</title>
<indexterm><primary>WndProc</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>WndProc</secondary></indexterm>
<para><computeroutput>LRESULT CALLBACK WndProc (HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</computeroutput></para><para>

<para>Fonction CALLBACK de traitement des messages Windows. </para>
</para>

<para>Comments manageable by Doxygen</para>

<para>Traitement de la boucle infinie des messages Windows 
                <formalpara>
                    <title>
ParamÃ¨tres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>hWnd</entry><entry>
<para>L&apos;header de la fenêtre principale. </para>
</entry>
                            </row>
                            <row>
<entry>uMsg</entry><entry>
<para>Un entier non signé. </para>
</entry>
                            </row>
                            <row>
<entry>wParam</entry><entry>
<para>Les paramétres en entrée. </para>
</entry>
                            </row>
                            <row>
<entry>lParam</entry><entry>
<para>Autres paramétres en entrée. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>LRESULT Un LRESULT donnant le status du traitement du message. </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_ae749e989b362e19783c7af4a2bf46c95_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_lesson09_8c_ae749e989b362e19783c7af4a2bf46c95_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des variables</title>
<anchor xml:id="__lesson09_8c_1a22389371583c4b8843e06da43399d6d9"/><section>
    <title>active</title>
<indexterm><primary>active</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>active</secondary></indexterm>
<para><computeroutput>BOOL active =TRUE</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1ab15a33c0173f2c5b6ac806c55cf7f0ba"/><section>
    <title>fullscreen</title>
<indexterm><primary>fullscreen</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>fullscreen</secondary></indexterm>
<para><computeroutput>BOOL fullscreen =TRUE</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a78f6446a0e13adc7b7b2f239112ac785"/><section>
    <title>hDC</title>
<indexterm><primary>hDC</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>hDC</secondary></indexterm>
<para><computeroutput>HDC hDC =NULL</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a74029128723095e7bf00a71d46af8b24"/><section>
    <title>hInstance</title>
<indexterm><primary>hInstance</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>hInstance</secondary></indexterm>
<para><computeroutput>HINSTANCE hInstance</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a874963259c7cd998acfe6e187fbdb4c1"/><section>
    <title>hRC</title>
<indexterm><primary>hRC</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>hRC</secondary></indexterm>
<para><computeroutput>HGLRC hRC =NULL</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1afec4341c234519e145bac6f0e5edaa51"/><section>
    <title>hWnd</title>
<indexterm><primary>hWnd</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>hWnd</secondary></indexterm>
<para><computeroutput>HWND hWnd =NULL</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a55a8351b704275ad12988864918abb2a"/><section>
    <title>keys</title>
<indexterm><primary>keys</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>keys</secondary></indexterm>
<para><computeroutput>BOOL keys[256]</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a8166a6eff3ba7dbe6db9caa81bdd4444"/><section>
    <title>loop</title>
<indexterm><primary>loop</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>loop</secondary></indexterm>
<para><computeroutput>GLuint loop</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a31a0a56b0946f085f98ad55b0d06d072"/><section>
    <title>spin</title>
<indexterm><primary>spin</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>spin</secondary></indexterm>
<para><computeroutput>GLfloat spin</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1ac64e182ae2c74bf412b1fd02b9f488f9"/><section>
    <title>star</title>
<indexterm><primary>star</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>star</secondary></indexterm>
<para><computeroutput><link linkend="_structetoiles">etoiles</link> star[<link linkend="__lesson09_8c_1aee1563ded26b0491400b3ed720011879">num</link>]</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1aade27af54c2c7c72b1a666ff247058ca"/><section>
    <title>texid</title>
<indexterm><primary>texid</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>texid</secondary></indexterm>
<para><computeroutput>GLuint texid[1]</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a8dbc8c0cec45367c7d19c7dfa3768fae"/><section>
    <title>texture</title>
<indexterm><primary>texture</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>texture</secondary></indexterm>
<para><computeroutput>GLuint texture[1]</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1ab98fac9381661f3225062c3522bb29ad"/><section>
    <title>tilt</title>
<indexterm><primary>tilt</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>tilt</secondary></indexterm>
<para><computeroutput>GLfloat tilt =90.0f</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a26fe2712ec0f6355d9517e84c8139f81"/><section>
    <title>tp</title>
<indexterm><primary>tp</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>tp</secondary></indexterm>
<para><computeroutput>BOOL tp</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1ae33d9fcdba1f3ce7d730752ae88594b3"/><section>
    <title>twinkle</title>
<indexterm><primary>twinkle</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>twinkle</secondary></indexterm>
<para><computeroutput>BOOL twinkle</computeroutput></para></section>
<anchor xml:id="__lesson09_8c_1a5a2149a845f88b6489d3d88845d0f257"/><section>
    <title>zoom</title>
<indexterm><primary>zoom</primary><secondary>Lesson09.c</secondary></indexterm>
<indexterm><primary>Lesson09.c</primary><secondary>zoom</secondary></indexterm>
<para><computeroutput>GLfloat zoom =-15.0f</computeroutput></para></section>
</section>
</section>
